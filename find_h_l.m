function res=find_h_l()
    % указать самому из своих соображений
    delta_o=10000
    delta_t =5000
    e =0.00001
    options=odeset('RelTol' , 1e-7, 'AbsTol' , 1e-10 ,'Refine','8', 'MaxStep',1e-2)

    %занчения даны, их тоже надо указать
    i1=1
    i2=0
    i3=1
    w2=1
    k2=0.9
    w=sqrt(w2)
    k=sqrt(k2)
    m=9
    n=10
    
    %начало вычислений 
    if i1==1
        th0_1=0
    else
        th0_1=pi/2
    end

    if i2==1
        th0_2= pi+m*pi
        th0_3=0
    else
        th0_2= pi/2+m*pi
        th0_3= pi/2
    end

    if i3==1
        th0_4=pi+(n-m)*pi
    else
        th0_4=pi/2+(n-m)*pi
    end


    c1=1/2
    c2=(1+k.^(-2))/2
    
    %поиск начальных h, l
    [h, l]=initial_h_l(n, m, i1, i2, i3, w, k)
    t=l
    o=h-l
    
    %поиск собственных зачений в тета
    [o, t]=find_o_t(th0_1, th0_2, th0_3, th0_4 ,o, t, c1, c2, w, k,  delta_o, delta_t, e, options)
    l=t
    h=o+t
    res = [h, l]
end

%поиск начальных h, l
function [h, l]=initial_h_l(n, m, i1, i2, i3, w, k)
    if w<=n
        if [i1, i2, i3]==[0, 0, 0]
            l=(k.^2)*2*n(2*n+1)
        end
        if [i1, i2, i3]==[1, 0, 0] | [i1, i2, i3]==[0, 1, 0] | [i1, i2, i3]==[0, 0, 1]
            l=(k.^2)*(2*n+1)*(2*n+2)
        end
        if [i1, i2, i3]==[1, 1, 0] | [i1, i2, i3]==[1, 0, 1] | [i1, i2, i3]==[0, 1, 1]
            l=(k.^2)*(2*n+2)*(2*n+3)
        end
        if [i1, i2, i3]==[1, 1, 1] 
            l=(k.^2)*(2*n+3)*(2*n+4)
        end
        x=l.^(1/2)
        if x==0
            h=0
        else
            if m<=(n-m)
                if i1==0
                    q=2*m
                else
                    q=2*m+1
                end
                h=(2*q+1)*x-1/4*(2*(q.^2)+2*q+1)*(1+(k.^2))+1/16*(2*q-1)*(2*(2*(q.^2)+2*q+3)*(k.^2)-((q.^2)+q+1)*(1+(k.^2)).^2)*(x.^(-1))
            end
            if m>(n-m)
                if i3==0
                    q=2*(n-m)
                else
                    q=2*(n-m)+1
                end
                h=(x.^2)/(k.^2)-(2*q+1)*((1-(k.^2)).^(1/2))*(k.^(-1))*x+1/4*(2*(q.^2)+2*q+1)*(2-(k.^2))-1/16*(2*q-1)*(2*(2*(q.^2)+2*q+3)*(1-k.^2)-((q.^2)+q+1)*(2-(k.^2)).^2)*k*(x.^(-1))*(1-(k.^2)).^(-1/2)
            end
        end
    else
        a=n-m+(2-(-1).^(i2))/4
        b=m+(2-(-1).^(i1))/4
        h=4*k*w*b-(2*(k.^2)*(b.^2)-8*((1-(k.^2)).^(1/2))*a*b+1/2+(k.^2)/8)
        l=(k.^2)*(w.^2)+4*k*w*(b+a*((1-(k.^2)).^(1/2)))-(k.^2)*(2*a+2*(b.^2)+3/4)
    end
end

%поиск собственных зачений в тета
function [o1, t1]=find_o_t(th0_1, th0_2, th0_3, th0_4 ,o1, t1, c1, c2, w, k,  delta_o, delta_t, e, options)
    th_1_L=ode45(@(x, th) ODE_th_1_L( x, th, w, k, o1, t1), [0, 1/2], th0_1, options)
    th_1_R=ode45(@(x, th) ODE_th_1_R(  x, th, w, k, o1, t1), [1,1/2], th0_2, options)
    th_2_L=ode45(@(x, th) ODE_th_2_L(  x, th, w, k, o1, t1), [1, (1+(k.^(-2)))/2],th0_3, options)
    th_2_R=ode45(@(x, th) ODE_th_2_R( x, th, w, k, o1, t1), [k.^(-2),(1+(k.^(-2)))/2], th0_4, options)

    th_1_L=deval(th_1_L,c1)
    th_1_R=deval(th_1_R,c1)
    th_2_L=deval(th_2_L,c2)
    th_2_R=deval(th_2_R,c2)
    
    %1
    if (th_1_L-th_1_R)>=0 & (th_2_L-th_2_R)>=0
        delta_t=delta_t/2
        t1=t1-delta_t
        if (delta_o<=e) & (delta_t<=e)
            return
        else
            [o1, t1]=find_o_t(th0_1, th0_2, th0_3, th0_4 ,o1, t1, c1, c2, w, k,  delta_o, delta_t, e, options)
        end
    end
 
    %3
    if (th_1_L-th_1_R)<=0 & (th_2_L-th_2_R)>=0
        delta_o=delta_o/2
        o1=o1+delta_o
        if (delta_o<=e) & (delta_t<=e)
            return
        else
            [o1, t1]=find_o_t(th0_1, th0_2, th0_3, th0_4 ,o1, t1, c1, c2, w, k,  delta_o, delta_t, e, options)
        end
    end

    %4
    if (th_1_L-th_1_R)<=0 & (th_2_L-th_2_R)<=0
        delta_t=delta_t/2
        t1=t1+delta_t
        if (delta_o<=e) & (delta_t<=e)
            return
        else
            [o1, t1]=find_o_t(th0_1, th0_2, th0_3, th0_4 ,o1, t1, c1, c2, w, k,  delta_o, delta_t, e, options)
        end
    end
  
    %2
    if (th_1_L-th_1_R)>=0 & (th_2_L-th_2_R)<=0
        delta_o=delta_o/2
        o1=o1-delta_o
        if (delta_o<=e) & (delta_t<=e)
            return
        else
            [o1, t1]=find_o_t(th0_1, th0_2, th0_3, th0_4 ,o1, t1, c1, c2, w, k,  delta_o, delta_t, e, options)
        end
    end
end

%Функция тета
function ode_th =ODE_th_1_L( x, th, w, k, o, t)
    v2 =exp(-4/abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2))*((abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)/4)^(1/2) - 1) + 1
    v =(exp(-4/abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2))*((abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)/4)^(1/2) - 1) + 1)^(1/2)
    diff_v =((exp(-4/abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2))*sign(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)*(16*w^2*x^3 - (4*t*x)/k^2))/(8*(abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)/4)^(1/2)) + (4*exp(-4/abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2))*sign(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)*(16*w^2*x^3 - (4*t*x)/k^2)*((abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)/4)^(1/2) - 1))/abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)^2)/(2*(exp(-4/abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2))*((abs(4*w^2*x^4 + o/k^2 - (t*(2*x^2 - 1))/k^2)/4)^(1/2) - 1) + 1)^(1/2))
    f=(2*(x^2)-1)*(2*(x^2)-(k^(-2)))/8
    q=o*(k^(-2))+(1-2*(x^2))*t*(k^(-2))+4*(w^2)*(x^4)
    ode_th=(v2/(f^(1/2)))*((cos(th))^2)+(q/(4*v2*(f^(1/2))))*((sin(th))^2)+(diff_v/v)*(sin(2*th))
end

function ode_th =ODE_th_1_R( x, th, w, k, o, t)
    v2 =exp(-4/abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2))*((abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)/4)^(1/2) - 1) + 1
    v =(exp(-4/abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2))*((abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)/4)^(1/2) - 1) + 1)^(1/2)
    diff_v =((exp(-4/abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2))*sign(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)*(2*w^2*(4*x - 4)*(2*(x - 1)^2 - 1) + (2*t*(2*x - 2))/k^2))/(8*(abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)/4)^(1/2)) + (4*exp(-4/abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2))*sign(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)*(2*w^2*(4*x - 4)*(2*(x - 1)^2 - 1) + (2*t*(2*x - 2))/k^2)*((abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)/4)^(1/2) - 1))/abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)^2)/(2*(exp(-4/abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2))*((abs(w^2*(2*(x - 1)^2 - 1)^2 + o/k^2 + (2*t*(x - 1)^2)/k^2)/4)^(1/2) - 1) + 1)^(1/2))
    f=(1-2*((1-x)^2))*((k^(-2))-1+2*((1-x)^2))/8
    q=o*(k^(-2))+2*t*(k^(-2))*((1-x)^2)+(w^2)*((1-2*((1-x)^2))^2)
    ode_th=(v2/(f^(1/2)))*((cos(th))^2)+(q/(4*v2*(f^(1/2))))*((sin(th))^2)+(diff_v/v)*(sin(2*th))
end

function ode_th =ODE_th_2_L( x, th, w, k, o, t)
    v2 = exp(-4/abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1))))*((abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))/4)^(1/2) - 1) + 1 
    v =(exp(-4/abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1))))*((abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))/4)^(1/2) - 1) + 1)^(1/2)
    diff_v = -((exp(-4/abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1))))*sign(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))*((2*t*(2*x - 2))/(k^2*(1/k^2 - 1)) - (4*w^2*(2*x - 2)*((2*(x - 1)^2)/(1/k^2 - 1) + 1))/(1/k^2 - 1)))/(8*(abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))/4)^(1/2)) + (4*exp(-4/abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1))))*sign(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))*((2*t*(2*x - 2))/(k^2*(1/k^2 - 1)) - (4*w^2*(2*x - 2)*((2*(x - 1)^2)/(1/k^2 - 1) + 1))/(1/k^2 - 1))*((abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))/4)^(1/2) - 1))/abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))^2)/(2*(exp(-4/abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1))))*((abs(w^2*((2*(x - 1)^2)/(1/k^2 - 1) + 1)^2 + o/k^2 - (2*t*(x - 1)^2)/(k^2*(1/k^2 - 1)))/4)^(1/2) - 1) + 1)^(1/2))
    f=((k^(-2))-1+2*((x-1)^2))*(1-(k^(-2))+2*((x-1)^2)*((k^(-2))-1)^(-1))/8
    q=o*(k^(-2))-2*((x-1)^2)*(((k^(-2))-1)^(-1))*t*(k^(-2))+(w^2)*((1+2*((x-1)^2)/((k^(-2))-1))^2)
    ode_th=(v2/((-f)^(1/2)))*((cos(th))^2)-(q/(4*v2*((-f)^(1/2))))*((sin(th))^2)+(diff_v/v)*(sin(2*th))
end

function ode_th =ODE_th_2_R( x, th, w, k, o, t)
    f=((k^(-2))*((k^(-2))-1)-2*((x-(k^(-2)))^2))*((-(k^(-2))+1+2*((x-(k^(-2)))^2)*((k^(-2))-1)^(-1)))/8
    q=o*(k^(-2))-t*(k^(-2))*((k^(-2))-1-2*((x-(k^(-2)))^2)*(((k^(-2))-1)^(-1)))+(w^2)*(((k^(-2))-2*(((x-(k^(-2)))^2))/((k^(-2))-1))^2)
    v2 =exp(-4/abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2))*((abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)/4)^(1/2) - 1) + 1
    v =(exp(-4/abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2))*((abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)/4)^(1/2) - 1) + 1)^(1/2)
    diff_v =((sign(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)*exp(-4/abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2))*((2*t*(2*x - 2/k^2))/(k^2*(1/k^2 - 1)) + (4*w^2*(2*x - 2/k^2)*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2))/(1/k^2 - 1)))/(8*(abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)/4)^(1/2)) + (4*sign(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)*exp(-4/abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2))*((abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)/4)^(1/2) - 1)*((2*t*(2*x - 2/k^2))/(k^2*(1/k^2 - 1)) + (4*w^2*(2*x - 2/k^2)*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2))/(1/k^2 - 1)))/abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)^2)/(2*(exp(-4/abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2))*((abs(w^2*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2)^2 + o/k^2 + (t*((2*(x - 1/k^2)^2)/(1/k^2 - 1) - 1/k^2 + 1))/k^2)/4)^(1/2) - 1) + 1)^(1/2))
    ode_th=(v2/((-f)^(1/2)))*((cos(th))^2)-(q/(4*v2*((-f)^(1/2))))*((sin(th))^2)+(diff_v/v)*(sin(2*th))
end

